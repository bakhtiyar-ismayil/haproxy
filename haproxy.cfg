global
    log 127.0.0.1 local3
    chroot /var/lib/haproxy
    pidfile /var/run/haproxy2.pid
    maxconn 4000
    user haproxy
    group haproxy
    daemon
    stats socket /var/lib/haproxy/stats2




#global
#  stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
#  log stdout format raw local0 info

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 1m
    timeout server 1m
    timeout http-keep-alive 10s
    timeout check 10s
    maxconn 3000


#defaults
#  mode http
#  timeout client 10s
#  timeout connect 5s
#  timeout server 10s
#  timeout http-request 10s
#  log global



###############################################################
frontend
###############################################################
frontend http_front
    bind *:443 ssl crt /etc/haproxy/certs/cert.pem
    mode http

    # ACL: Domain Name
    acl is_3000_port hdr(host) -i grafana:3000
    use_backend backend_3000 if is_3000_port
    default_backend backend_8080

    # config for https stats page
    acl is_haproxy hdr(host) -i haproxy.example.com
    use_backend stats_backend if is_haproxy

    # ACL: Path Begin
    acl path_api path_beg /api/
    use_backend backend_api if path_api


    acl path_blue path_beg /sample-blue/
    use_backend backend_blue if path_blue


    acl path_red path_beg /sample-red/
    use_backend backend_red if path_red

    # ACL: Path End
    acl path_html path_end .html
    use_backend backend_html if path_html

    # ACL: Source Address
    acl src_local src 0.0.0.0/0
    use_backend backend_local if src_local


###############################################################
backend
###############################################################

# Backend for stats with http
# frontend stats 
#  bind *:8404
#  stats enable
#  stats uri /
#  stats refresh 10s

# Backend for stats with https
backend stats_backend
    mode http
    stats enable
    stats uri /
    stats refresh 10s
    stats realm HAproxy\ Statistics
    stats auth admin:admin123





backend backend_3000
    mode http
    server g1 grafana:3000 check
    server g2 grafana:3002 check

backend backend_8080
    mode http
    server nginx1:80 check
    server nginx2:80 check



# Backend to load balance MongoDB nodes
backend mongodb_backend
    #balance roundrobin
    option tcp-check
    mode tcp
    tcp-check send-binary 3a000000 # Message Length (58)
    tcp-check send-binary EEEEEEEE # Request ID (random value)
    tcp-check send-binary 00000000 # Response To (nothing)
    tcp-check send-binary d4070000 # OpCode (Query)
    tcp-check send-binary 00000000 # Query Flags
    tcp-check send-binary 61646d696e2e # fullCollectionName (admin.$cmd)
    tcp-check send-binary 24636d6400 # continued
    tcp-check send-binary 00000000 # NumToSkip
    tcp-check send-binary FFFFFFFF # NumToReturn
    # Start of Document
    tcp-check send-binary 13000000 # Document Length (19)
    tcp-check send-binary 10 # Type (Int32)
    tcp-check send-binary 69736d617374657200 # ismaster:
    tcp-check send-binary 01000000 # Value : 1
    tcp-check send-binary 00 # Term
    tcp-check expect binary 69736d61737465720001 #ismaster True
    tcp-check expect binary 69736d61737465720001 #ismaster True

    server mongo1 mongo1.example.com:27017 check inter 10000
    server mongo2 mongo2.example.com:27017 check inter 10000
    server mongo3 mongo3.example.com:27017 check inter 10000



